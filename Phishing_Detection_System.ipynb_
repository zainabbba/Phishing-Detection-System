{
  "cells": [
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 277
        },
        "id": "gnGe_arcp23C",
        "outputId": "fe21e49b-1a8b-4f72-a49d-65b17a775849"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[nltk_data] Downloading package stopwords to /root/nltk_data...\n",
            "[nltk_data]   Unzipping corpora/stopwords.zip.\n",
            "[nltk_data] Downloading package stopwords to /root/nltk_data...\n",
            "[nltk_data]   Package stopwords is already up-to-date!\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   Querylength  domain_token_count  path_token_count  avgdomaintokenlen  \\\n",
              "0            0                   2                12                5.5   \n",
              "1            0                   3                12                5.0   \n",
              "\n",
              "   longdomaintokenlen  avgpathtokenlen  tld  charcompvowels  charcompace  \\\n",
              "0                   8         4.083334    2              15            7   \n",
              "1                  10         3.583333    3              12            8   \n",
              "\n",
              "   ldl_url  ...  SymbolCount_FileName  SymbolCount_Extension  \\\n",
              "0        0  ...                    -1                     -1   \n",
              "1        2  ...                     1                      0   \n",
              "\n",
              "   SymbolCount_Afterpath  Entropy_URL  Entropy_Domain  Entropy_DirectoryName  \\\n",
              "0                     -1     0.676804        0.860529              -1.000000   \n",
              "1                     -1     0.715629        0.776796               0.693127   \n",
              "\n",
              "   Entropy_Filename  Entropy_Extension  Entropy_Afterpath  URL_Type_obf_Type  \n",
              "0         -1.000000               -1.0               -1.0             benign  \n",
              "1          0.738315                1.0               -1.0             benign  \n",
              "\n",
              "[2 rows x 80 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9e01740d-f620-49dd-9804-748c386295c3\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Querylength</th>\n",
              "      <th>domain_token_count</th>\n",
              "      <th>path_token_count</th>\n",
              "      <th>avgdomaintokenlen</th>\n",
              "      <th>longdomaintokenlen</th>\n",
              "      <th>avgpathtokenlen</th>\n",
              "      <th>tld</th>\n",
              "      <th>charcompvowels</th>\n",
              "      <th>charcompace</th>\n",
              "      <th>ldl_url</th>\n",
              "      <th>...</th>\n",
              "      <th>SymbolCount_FileName</th>\n",
              "      <th>SymbolCount_Extension</th>\n",
              "      <th>SymbolCount_Afterpath</th>\n",
              "      <th>Entropy_URL</th>\n",
              "      <th>Entropy_Domain</th>\n",
              "      <th>Entropy_DirectoryName</th>\n",
              "      <th>Entropy_Filename</th>\n",
              "      <th>Entropy_Extension</th>\n",
              "      <th>Entropy_Afterpath</th>\n",
              "      <th>URL_Type_obf_Type</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>12</td>\n",
              "      <td>5.5</td>\n",
              "      <td>8</td>\n",
              "      <td>4.083334</td>\n",
              "      <td>2</td>\n",
              "      <td>15</td>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>-1</td>\n",
              "      <td>-1</td>\n",
              "      <td>-1</td>\n",
              "      <td>0.676804</td>\n",
              "      <td>0.860529</td>\n",
              "      <td>-1.000000</td>\n",
              "      <td>-1.000000</td>\n",
              "      <td>-1.0</td>\n",
              "      <td>-1.0</td>\n",
              "      <td>benign</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>12</td>\n",
              "      <td>5.0</td>\n",
              "      <td>10</td>\n",
              "      <td>3.583333</td>\n",
              "      <td>3</td>\n",
              "      <td>12</td>\n",
              "      <td>8</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>-1</td>\n",
              "      <td>0.715629</td>\n",
              "      <td>0.776796</td>\n",
              "      <td>0.693127</td>\n",
              "      <td>0.738315</td>\n",
              "      <td>1.0</td>\n",
              "      <td>-1.0</td>\n",
              "      <td>benign</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>2 rows Ã— 80 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9e01740d-f620-49dd-9804-748c386295c3')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-9e01740d-f620-49dd-9804-748c386295c3 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-9e01740d-f620-49dd-9804-748c386295c3');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 1
        }
      ],
      "source": [
        "#!/usr/bin/env python\n",
        "\"\"\"\n",
        "This file is for training on the PhishTank data.\n",
        "\"\"\"\n",
        "\n",
        "from __future__ import print_function\n",
        "import keras\n",
        "from keras.preprocessing.text import Tokenizer\n",
        "from keras.preprocessing.sequence import pad_sequences\n",
        "from keras.models import load_model\n",
        "from keras.models import Sequential\n",
        "from keras.layers import LSTM, GRU, Embedding, Dense, Flatten, Bidirectional\n",
        "from keras.layers.core import Dense, Dropout, Activation\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "import re \n",
        "import nltk\n",
        "nltk.download('stopwords')\n",
        "from nltk.corpus import stopwords\n",
        "from nltk.stem import WordNetLemmatizer\n",
        "from sklearn.model_selection import cross_val_score, cross_val_predict\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn import metrics\n",
        "from sklearn.preprocessing import LabelEncoder\n",
        "from __future__ import print_function\n",
        "import keras\n",
        "from keras.preprocessing.text import Tokenizer\n",
        "from keras.preprocessing.sequence import pad_sequences\n",
        "from keras.models import load_model\n",
        "from keras.models import Sequential\n",
        "from keras.layers import LSTM, GRU, Embedding, Dense, Flatten, Bidirectional\n",
        "from keras.layers.core import Dense, Dropout, Activation\n",
        "from sklearn.feature_selection import SelectKBest\n",
        "from sklearn.feature_selection import chi2\n",
        "from sklearn.preprocessing import MinMaxScaler\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "import re \n",
        "import nltk\n",
        "nltk.download('stopwords')\n",
        "from nltk.corpus import stopwords\n",
        "from nltk.stem import WordNetLemmatizer\n",
        "from sklearn.model_selection import cross_val_score, cross_val_predict\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn import metrics\n",
        "from sklearn.feature_extraction.text import TfidfVectorizer\n",
        "\n",
        "\n",
        "#Read data \n",
        "dataset = pd.read_csv('Phishing.csv',encoding='utf-8')\n",
        "dataset.head(2)"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(dataset.size)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "RF1EoDaK7bEF",
        "outputId": "ccb6b129-e4be-4583-dbe1-44b7211c60ce"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "537840\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "E1aJ-9hvZ4HO",
        "outputId": "f07f4571-067d-4766-b854-a2431cdc0de7"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "NaNs detected: 9669\n",
            "There are 80 columns and 6723 rows in the provided data.\n",
            "Below is the dataset's composition\n",
            "phishing    4014\n",
            "benign      2709\n",
            "Name: URL_Type_obf_Type, dtype: int64\n",
            "NaNs detected: 0\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/feature_selection/_univariate_selection.py:112: UserWarning: Features [33 35] are constant.\n",
            "  warnings.warn(\"Features %s are constant.\" % constant_features_idx, UserWarning)\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/feature_selection/_univariate_selection.py:113: RuntimeWarning: invalid value encountered in true_divide\n",
            "  f = msb / msw\n"
          ]
        }
      ],
      "source": [
        "\n",
        "\n",
        "#detect Nana values\n",
        "dep_var = 'URL_Type_obf_Type'\n",
        "nans = 0\n",
        "\n",
        "# This is a kind of stupid way of counting how many NaNs show up within the data\n",
        "for index, row in dataset.iterrows():\n",
        "  for col in dataset.columns:\n",
        "    if col == dep_var:\n",
        "      continue\n",
        "\n",
        "    #print(row[col], end=' ')\n",
        "    # If the value is NaN, then mark add one to our counter\n",
        "    if np.isnan(row[col]):\n",
        "     nans += 1\n",
        "  #print('')\n",
        "print('NaNs detected: {}'.format(nans))\n",
        "# Removes all rows if they contain NaN values\n",
        "dataset.dropna(axis='index', inplace=True)\n",
        "print('There are {} columns and {} rows in the provided data.'.format(len(dataset.columns), len(dataset)))\n",
        "\n",
        "print('Below is the dataset\\'s composition')\n",
        "print(dataset[dep_var].value_counts())\n",
        "\n",
        "nans = 0\n",
        "\n",
        "# This is a kind of stupid way of counting how many NaNs show up within the data\n",
        "for index, row in dataset.iterrows():\n",
        "  for col in dataset.columns:\n",
        "    if col == dep_var:\n",
        "      continue\n",
        "\n",
        "    #print(row[col], end=' ')\n",
        "    # If the value is NaN, then mark add one to our counter\n",
        "    if np.isnan(row[col]):\n",
        "     nans += 1\n",
        "  #print('')\n",
        "print('NaNs detected: {}'.format(nans))\n",
        "\n",
        "\n",
        "# Assign x and y features and label \n",
        "x = dataset.drop(['URL_Type_obf_Type'], axis=1)\n",
        "\n",
        "y = dataset['URL_Type_obf_Type'].map( {'benign':1, 'phishing':0 })\n",
        "\n",
        "\n",
        "#Make values in same range\n",
        "scaler = MinMaxScaler()\n",
        "scaler.fit(x)\n",
        "scaler.transform(x)\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "#Split data into tran and test\n",
        "x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.40)\n",
        "\n",
        "\n",
        "x_train = np.asarray(x_train).astype(np.float32)\n",
        "y_train = np.asarray(y_train).astype(np.float32)\n",
        "\n",
        "#Select best features\n",
        "select_feature = SelectKBest(k=20).fit(x_train, y_train)\n",
        "\n",
        "import numpy as np\n",
        "\n",
        "x_train = np.asarray(x_train).astype(np.float32)"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from collections import Counter \n",
        "# 2690 test\n",
        "# 4033 train\n",
        "\n",
        "#total=6723 records\n",
        "537840"
      ],
      "metadata": {
        "id": "6BGsuY4XQ1gh"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print('Whole', Counter(y))\n",
        "print('Train', Counter(y_train))\n",
        "print('Test', Counter(y_test))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_50mdEGzULr3",
        "outputId": "d73a50d4-0e05-4140-973f-71dbb305ba7c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Whole Counter({0: 4014, 1: 2709})\n",
            "Train Counter({0.0: 2420, 1.0: 1613})\n",
            "Test Counter({0: 1594, 1: 1096})\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "08c6c1xQUPg3",
        "outputId": "cbdcc1e3-fb9b-46cc-f51a-0c438f65ae04"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Model: \"sequential\"\n",
            "_________________________________________________________________\n",
            " Layer (type)                Output Shape              Param #   \n",
            "=================================================================\n",
            " lstm (LSTM)                 (None, 79, 128)           66560     \n",
            "                                                                 \n",
            " bidirectional (Bidirectiona  (None, 79, 256)          263168    \n",
            " l)                                                              \n",
            "                                                                 \n",
            " bidirectional_1 (Bidirectio  (None, 79, 256)          394240    \n",
            " nal)                                                            \n",
            "                                                                 \n",
            " bidirectional_2 (Bidirectio  (None, 256)              394240    \n",
            " nal)                                                            \n",
            "                                                                 \n",
            " dense (Dense)               (None, 1)                 257       \n",
            "                                                                 \n",
            "=================================================================\n",
            "Total params: 1,118,465\n",
            "Trainable params: 1,118,465\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n"
          ]
        }
      ],
      "source": [
        "\n",
        "\n",
        "\n",
        "# Define callbacks for Keras.\n",
        "callbacks_list = [\n",
        "    keras.callbacks.ModelCheckpoint(\n",
        "    filepath='lstmchar256256128test.h5',\n",
        "    monitor='val_loss',\n",
        "    save_best_only=True\n",
        "    ),\n",
        "    keras.callbacks.EarlyStopping(\n",
        "    monitor='val_loss', \n",
        "    min_delta=0,\n",
        "    patience=2, \n",
        "    mode='auto',\n",
        "    baseline=None,\n",
        "    )\n",
        "]\n",
        "\n",
        "\n",
        "# Create model for training.\n",
        "model = Sequential()\n",
        "\n",
        "model.add(LSTM( 128,input_shape = (79, 1),return_sequences=True))\n",
        "model.add(Bidirectional(LSTM(128, dropout=0.3, recurrent_dropout=0.3, return_sequences=True)))\n",
        "model.add(Bidirectional(LSTM(128, dropout=0.3, recurrent_dropout=0.3, return_sequences=True)))\n",
        "model.add(Bidirectional(LSTM(128, dropout=0.3, recurrent_dropout=0.3)))\n",
        "model.add(Dense(1,activation=\"sigmoid\"))\n",
        "model.summary()\n",
        "\n",
        "model.compile(optimizer='adam',\n",
        "            loss='binary_crossentropy',\n",
        "            metrics=['accuracy'])\n",
        "\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "eIztLaXajRaN",
        "outputId": "6aa7c412-56fa-4029-b599-718ed360f80b"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Epoch 1/50\n",
            "3/3 [==============================] - 114s 32s/step - loss: 0.6936 - accuracy: 0.6094 - val_loss: 0.6797 - val_accuracy: 0.5737\n",
            "Epoch 2/50\n",
            "3/3 [==============================] - 79s 25s/step - loss: 0.6708 - accuracy: 0.6091 - val_loss: 0.6731 - val_accuracy: 0.5737\n",
            "Epoch 3/50\n",
            "3/3 [==============================] - 78s 25s/step - loss: 0.6573 - accuracy: 0.6091 - val_loss: 0.6478 - val_accuracy: 0.5886\n",
            "Epoch 4/50\n",
            "3/3 [==============================] - 77s 24s/step - loss: 0.6272 - accuracy: 0.6835 - val_loss: 0.6471 - val_accuracy: 0.6221\n",
            "Epoch 5/50\n",
            "3/3 [==============================] - 76s 24s/step - loss: 0.6075 - accuracy: 0.6748 - val_loss: 0.5578 - val_accuracy: 0.7162\n",
            "Epoch 6/50\n",
            "3/3 [==============================] - 76s 24s/step - loss: 0.5668 - accuracy: 0.7161 - val_loss: 0.5425 - val_accuracy: 0.7212\n",
            "Epoch 7/50\n",
            "3/3 [==============================] - 74s 24s/step - loss: 0.5432 - accuracy: 0.7188 - val_loss: 0.5457 - val_accuracy: 0.7200\n",
            "Epoch 8/50\n",
            "3/3 [==============================] - 76s 24s/step - loss: 0.5228 - accuracy: 0.7272 - val_loss: 0.5076 - val_accuracy: 0.7472\n",
            "Epoch 9/50\n",
            "3/3 [==============================] - 86s 25s/step - loss: 0.4805 - accuracy: 0.7632 - val_loss: 0.4352 - val_accuracy: 0.7856\n",
            "Epoch 10/50\n",
            "3/3 [==============================] - 76s 25s/step - loss: 0.4102 - accuracy: 0.8159 - val_loss: 0.3846 - val_accuracy: 0.8116\n",
            "Epoch 11/50\n",
            "3/3 [==============================] - 78s 25s/step - loss: 0.4447 - accuracy: 0.7818 - val_loss: 0.4692 - val_accuracy: 0.7745\n",
            "Epoch 12/50\n",
            "3/3 [==============================] - 77s 25s/step - loss: 0.4387 - accuracy: 0.8007 - val_loss: 0.3536 - val_accuracy: 0.8538\n",
            "Epoch 13/50\n",
            "3/3 [==============================] - 79s 26s/step - loss: 0.3980 - accuracy: 0.8134 - val_loss: 0.3377 - val_accuracy: 0.8748\n",
            "Epoch 14/50\n",
            "3/3 [==============================] - 76s 24s/step - loss: 0.3528 - accuracy: 0.8605 - val_loss: 0.3471 - val_accuracy: 0.8563\n",
            "Epoch 15/50\n",
            "3/3 [==============================] - 78s 25s/step - loss: 0.3466 - accuracy: 0.8518 - val_loss: 0.3288 - val_accuracy: 0.8488\n",
            "Epoch 16/50\n",
            "3/3 [==============================] - 80s 26s/step - loss: 0.3320 - accuracy: 0.8537 - val_loss: 0.2969 - val_accuracy: 0.8736\n",
            "Epoch 17/50\n",
            "3/3 [==============================] - 77s 24s/step - loss: 0.3130 - accuracy: 0.8633 - val_loss: 0.3053 - val_accuracy: 0.8550\n",
            "Epoch 18/50\n",
            "3/3 [==============================] - 76s 25s/step - loss: 0.3071 - accuracy: 0.8689 - val_loss: 0.2657 - val_accuracy: 0.8872\n",
            "Epoch 19/50\n",
            "3/3 [==============================] - 80s 25s/step - loss: 0.2846 - accuracy: 0.8825 - val_loss: 0.2515 - val_accuracy: 0.9071\n",
            "Epoch 20/50\n",
            "3/3 [==============================] - 78s 25s/step - loss: 0.2722 - accuracy: 0.8915 - val_loss: 0.2355 - val_accuracy: 0.9095\n",
            "Epoch 21/50\n",
            "3/3 [==============================] - 78s 25s/step - loss: 0.2510 - accuracy: 0.8971 - val_loss: 0.2300 - val_accuracy: 0.9108\n",
            "Epoch 22/50\n",
            "3/3 [==============================] - 81s 26s/step - loss: 0.2378 - accuracy: 0.8958 - val_loss: 0.2116 - val_accuracy: 0.9269\n",
            "Epoch 23/50\n",
            "3/3 [==============================] - 78s 25s/step - loss: 0.2305 - accuracy: 0.9045 - val_loss: 0.2161 - val_accuracy: 0.9157\n",
            "Epoch 24/50\n",
            "3/3 [==============================] - 85s 28s/step - loss: 0.2173 - accuracy: 0.9089 - val_loss: 0.1925 - val_accuracy: 0.9306\n",
            "Epoch 25/50\n",
            "3/3 [==============================] - 78s 25s/step - loss: 0.2236 - accuracy: 0.9092 - val_loss: 0.2352 - val_accuracy: 0.9083\n",
            "Epoch 26/50\n",
            "3/3 [==============================] - 77s 25s/step - loss: 0.2235 - accuracy: 0.9039 - val_loss: 0.2093 - val_accuracy: 0.9170\n"
          ]
        }
      ],
      "source": [
        "\n",
        "# Train.\n",
        "history=model.fit(x_train, y_train,validation_data=(x_test, y_test),\n",
        "        epochs=50,\n",
        "        batch_size=1200,\n",
        "        callbacks=callbacks_list,\n",
        "         validation_split=0.20\n",
        "        )\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "pOnDpmJG57CP",
        "outputId": "772730d0-698e-48db-a0ca-cc9e11d311f3"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "3/3 [==============================] - 14s 4s/step - loss: 0.2044 - accuracy: 0.9149\n",
            "Model Accuracy: 91.49%\n"
          ]
        },
        {
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 576x360 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[0.   1.   0.94 ... 0.   0.   0.99]\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.97      0.88      0.92      1585\n",
            "           1       0.85      0.96      0.90      1105\n",
            "\n",
            "    accuracy                           0.91      2690\n",
            "   macro avg       0.91      0.92      0.91      2690\n",
            "weighted avg       0.92      0.91      0.92      2690\n",
            "\n"
          ]
        },
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1200x800 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "\n",
        "# Evaluate model on test data.\n",
        "score, acc = model.evaluate(x_test, y_test, verbose=1, batch_size=1024)\n",
        "\n",
        "print(\"Model Accuracy: {:0.2f}%\".format(acc * 100))\n",
        "\n",
        "\n",
        "#illuatrate of the results \n",
        "import keras\n",
        "from matplotlib import pyplot as plt\n",
        "plt.plot(history.history['accuracy'])\n",
        "plt.plot(history.history['val_accuracy'])\n",
        "plt.title('model accuracy')\n",
        "plt.ylabel('accuracy')\n",
        "plt.xlabel('epoch')\n",
        "plt.legend(['train', 'val'], loc='upper left')\n",
        "plt.show()\n",
        "\n",
        "\n",
        "pd.DataFrame(history.history).plot(figsize=(8,5))\n",
        "plt.show()\n",
        "\n",
        "from sklearn.metrics import confusion_matrix, classification_report,accuracy_score\n",
        "import seaborn as sns\n",
        "# extract the predicted probabilities\n",
        "p_pred = model.predict(x_test)\n",
        "p_pred = p_pred.flatten()\n",
        "print(p_pred.round(2))\n",
        "# extract the predicted class labels\n",
        "y_pred_LSTM = np.where(p_pred > 0.5, 1, 0)\n",
        "# print(y_pred)\n",
        "\n",
        "# predicted_ = model.predict(x_test)\n",
        "# print(predicted_)\n",
        "\n",
        "# print(confusion_matrix(y_test, y_pred))\n",
        "\n",
        "print(classification_report(y_test, y_pred_LSTM))\n",
        "\n",
        "\n",
        "plt.figure(dpi=200)\n",
        "mat = confusion_matrix(y_test, y_pred_LSTM)\n",
        "sns.heatmap(mat.T, annot=True, fmt='d', cbar=False)\n",
        "\n",
        "plt.title('Confusion Matrix for Naive Bayes')\n",
        "plt.xlabel('true label')\n",
        "plt.ylabel('predicted label')\n",
        "plt.savefig(\"confusion_matrix.png\")\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "UxkrRIYKwO_M"
      },
      "outputs": [],
      "source": [
        "from sklearn.metrics import roc_auc_score, accuracy_score, precision_score, recall_score, confusion_matrix,f1_score\n",
        "\n",
        "\n",
        "LSTM_ACC = accuracy_score(y_test, y_pred_LSTM)\n",
        "\n",
        "# print(\"Model Accuracy: {:0.2f}%\".format(acc * 100))\n",
        "# LSTM_ACC=model.evaluate(x_test, y_test)\n",
        "LSTM_precision=precision_score(y_test, y_pred_LSTM)\n",
        "LSTM_recall=recall_score(y_test, y_pred_LSTM)\n",
        "LSTM_f1 = f1_score(y_test, y_pred_LSTM )\n",
        "\n",
        "# print(\"LSTM Precision: \"+\"{:.1%}\".format(precision_score(y_test, y_pred)));\n",
        "# print(LSTM_recall)\n",
        "# print(\"LSTM Recall: \"+\"{:.1%}\".format(recall_score(y_test, y_pred)));"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "n6f87lgIRQvT"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import pickle\n",
        "from collections import defaultdict\n",
        "import re\n",
        "from bs4 import BeautifulSoup\n",
        "import sys\n",
        "import os\n",
        "import numpy as np\n",
        "#os.environ['KaERAS_BACKEND']='theano' # Why theano why not\n",
        "from keras.preprocessing.text import Tokenizer\n",
        "from keras.preprocessing.sequence import pad_sequences\n",
        "from keras.utils.np_utils import to_categorical\n",
        "from keras.layers import Embedding\n",
        "from keras.layers import Dense, Input, Flatten\n",
        "from keras.layers import Conv1D, MaxPooling1D, Embedding, Dropout\n",
        "from keras.models import Model\n",
        "from keras.callbacks import ModelCheckpoint\n",
        "import matplotlib.pyplot as plt\n",
        "plt.switch_backend('agg')\n",
        "from keras.layers import Embedding\n",
        "from keras.layers import Input, Dense, Embedding, Flatten\n",
        "from keras.layers import SpatialDropout1D\n",
        "from keras.layers.convolutional import Conv1D, MaxPooling1D\n",
        "from keras.models import Sequential\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bgGWDGl4qHS6",
        "outputId": "964eb195-39ba-4b33-e6ef-a25776e4e568"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Simplified convolutional neural network\n",
            "Model: \"sequential_1\"\n",
            "_________________________________________________________________\n",
            " Layer (type)                Output Shape              Param #   \n",
            "=================================================================\n",
            " conv1d (Conv1D)             (None, 79, 128)           768       \n",
            "                                                                 \n",
            " max_pooling1d (MaxPooling1D  (None, 39, 128)          0         \n",
            " )                                                               \n",
            "                                                                 \n",
            " dropout (Dropout)           (None, 39, 128)           0         \n",
            "                                                                 \n",
            " conv1d_1 (Conv1D)           (None, 39, 128)           82048     \n",
            "                                                                 \n",
            " max_pooling1d_1 (MaxPooling  (None, 19, 128)          0         \n",
            " 1D)                                                             \n",
            "                                                                 \n",
            " dropout_1 (Dropout)         (None, 19, 128)           0         \n",
            "                                                                 \n",
            " flatten (Flatten)           (None, 2432)              0         \n",
            "                                                                 \n",
            " dense_1 (Dense)             (None, 256)               622848    \n",
            "                                                                 \n",
            " dropout_2 (Dropout)         (None, 256)               0         \n",
            "                                                                 \n",
            " dense_2 (Dense)             (None, 1)                 257       \n",
            "                                                                 \n",
            "=================================================================\n",
            "Total params: 705,921\n",
            "Trainable params: 705,921\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n"
          ]
        }
      ],
      "source": [
        "\n",
        "model = Sequential()\n",
        "#\n",
        "model.add(Conv1D (128,5,padding = 'Same', \n",
        "                 activation ='relu', input_shape = (79,1)))\n",
        "model.add(MaxPooling1D())\n",
        "model.add(Dropout(0.25))\n",
        "#\n",
        "\n",
        "model.add(Conv1D(128,5,padding = 'Same', \n",
        "                 activation ='relu'))\n",
        "model.add(MaxPooling1D())\n",
        "model.add(Dropout(0.25))\n",
        "\n",
        "# fully connected\n",
        "model.add(Flatten())\n",
        "model.add(Dense(256, activation = \"relu\"))\n",
        "model.add(Dropout(0.5))\n",
        "model.add(Dense(1, activation = \"sigmoid\"))\n",
        "\n",
        "model.compile(loss='binary_crossentropy',\n",
        "              optimizer='adam',\n",
        "              metrics=['acc'])\n",
        "\n",
        "print(\"Simplified convolutional neural network\")\n",
        "model.summary()\n",
        "cp=ModelCheckpoint('model_cnn.hdf5',monitor='val_acc',verbose=1,save_best_only=True)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "background_save": true,
          "base_uri": "https://localhost:8080/"
        },
        "id": "E9cw4wY8qJpn",
        "outputId": "614730da-2a5d-47b6-f88d-11be51907662"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Epoch 1/50\n",
            "4/4 [==============================] - ETA: 0s - loss: 7.0129 - acc: 0.4394\n",
            "Epoch 1: val_acc improved from -inf to 0.58922, saving model to model_cnn.hdf5\n",
            "4/4 [==============================] - 4s 907ms/step - loss: 7.0129 - acc: 0.4394 - val_loss: 0.8460 - val_acc: 0.5892\n",
            "Epoch 2/50\n",
            "4/4 [==============================] - ETA: 0s - loss: 1.2862 - acc: 0.6038\n",
            "Epoch 2: val_acc did not improve from 0.58922\n",
            "4/4 [==============================] - 3s 817ms/step - loss: 1.2862 - acc: 0.6038 - val_loss: 0.7455 - val_acc: 0.5892\n",
            "Epoch 3/50\n",
            "4/4 [==============================] - ETA: 0s - loss: 0.7417 - acc: 0.6375\n",
            "Epoch 3: val_acc did not improve from 0.58922\n",
            "4/4 [==============================] - 3s 818ms/step - loss: 0.7417 - acc: 0.6375 - val_loss: 0.6763 - val_acc: 0.4576\n",
            "Epoch 4/50\n",
            "4/4 [==============================] - ETA: 0s - loss: 0.7004 - acc: 0.5819\n",
            "Epoch 4: val_acc improved from 0.58922 to 0.71301, saving model to model_cnn.hdf5\n",
            "4/4 [==============================] - 3s 843ms/step - loss: 0.7004 - acc: 0.5819 - val_loss: 0.6425 - val_acc: 0.7130\n",
            "Epoch 5/50\n",
            "4/4 [==============================] - ETA: 0s - loss: 0.6436 - acc: 0.6898\n",
            "Epoch 5: val_acc did not improve from 0.71301\n",
            "4/4 [==============================] - 3s 821ms/step - loss: 0.6436 - acc: 0.6898 - val_loss: 0.5923 - val_acc: 0.6952\n",
            "Epoch 6/50\n",
            "4/4 [==============================] - ETA: 0s - loss: 0.6191 - acc: 0.6789\n",
            "Epoch 6: val_acc improved from 0.71301 to 0.73346, saving model to model_cnn.hdf5\n",
            "4/4 [==============================] - 3s 841ms/step - loss: 0.6191 - acc: 0.6789 - val_loss: 0.5568 - val_acc: 0.7335\n",
            "Epoch 7/50\n",
            "4/4 [==============================] - ETA: 0s - loss: 0.5770 - acc: 0.7149\n",
            "Epoch 7: val_acc improved from 0.73346 to 0.81896, saving model to model_cnn.hdf5\n",
            "4/4 [==============================] - 3s 842ms/step - loss: 0.5770 - acc: 0.7149 - val_loss: 0.5085 - val_acc: 0.8190\n",
            "Epoch 8/50\n",
            "4/4 [==============================] - ETA: 0s - loss: 0.5331 - acc: 0.7791\n",
            "Epoch 8: val_acc improved from 0.81896 to 0.82007, saving model to model_cnn.hdf5\n",
            "4/4 [==============================] - 3s 843ms/step - loss: 0.5331 - acc: 0.7791 - val_loss: 0.4482 - val_acc: 0.8201\n",
            "Epoch 9/50\n",
            "4/4 [==============================] - ETA: 0s - loss: 0.4735 - acc: 0.8001\n",
            "Epoch 9: val_acc improved from 0.82007 to 0.83048, saving model to model_cnn.hdf5\n",
            "4/4 [==============================] - 3s 836ms/step - loss: 0.4735 - acc: 0.8001 - val_loss: 0.3906 - val_acc: 0.8305\n",
            "Epoch 10/50\n",
            "4/4 [==============================] - ETA: 0s - loss: 0.4368 - acc: 0.8125\n",
            "Epoch 10: val_acc improved from 0.83048 to 0.85651, saving model to model_cnn.hdf5\n",
            "4/4 [==============================] - 3s 833ms/step - loss: 0.4368 - acc: 0.8125 - val_loss: 0.3424 - val_acc: 0.8565\n",
            "Epoch 11/50\n",
            "4/4 [==============================] - ETA: 0s - loss: 0.4085 - acc: 0.8321\n",
            "Epoch 11: val_acc improved from 0.85651 to 0.86840, saving model to model_cnn.hdf5\n",
            "4/4 [==============================] - 3s 841ms/step - loss: 0.4085 - acc: 0.8321 - val_loss: 0.3192 - val_acc: 0.8684\n",
            "Epoch 12/50\n",
            "4/4 [==============================] - ETA: 0s - loss: 0.3809 - acc: 0.8480\n",
            "Epoch 12: val_acc improved from 0.86840 to 0.88401, saving model to model_cnn.hdf5\n",
            "4/4 [==============================] - 3s 840ms/step - loss: 0.3809 - acc: 0.8480 - val_loss: 0.2955 - val_acc: 0.8840\n",
            "Epoch 13/50\n",
            "4/4 [==============================] - ETA: 0s - loss: 0.3517 - acc: 0.8572\n",
            "Epoch 13: val_acc improved from 0.88401 to 0.88699, saving model to model_cnn.hdf5\n",
            "4/4 [==============================] - 3s 871ms/step - loss: 0.3517 - acc: 0.8572 - val_loss: 0.2806 - val_acc: 0.8870\n",
            "Epoch 14/50\n",
            "4/4 [==============================] - ETA: 0s - loss: 0.3361 - acc: 0.8651\n",
            "Epoch 14: val_acc improved from 0.88699 to 0.89703, saving model to model_cnn.hdf5\n",
            "4/4 [==============================] - 3s 847ms/step - loss: 0.3361 - acc: 0.8651 - val_loss: 0.2686 - val_acc: 0.8970\n",
            "Epoch 15/50\n",
            "4/4 [==============================] - ETA: 0s - loss: 0.3231 - acc: 0.8755\n",
            "Epoch 15: val_acc improved from 0.89703 to 0.90595, saving model to model_cnn.hdf5\n",
            "4/4 [==============================] - 3s 837ms/step - loss: 0.3231 - acc: 0.8755 - val_loss: 0.2437 - val_acc: 0.9059\n",
            "Epoch 16/50\n",
            "4/4 [==============================] - ETA: 0s - loss: 0.3038 - acc: 0.8852\n",
            "Epoch 16: val_acc improved from 0.90595 to 0.91190, saving model to model_cnn.hdf5\n",
            "4/4 [==============================] - 3s 840ms/step - loss: 0.3038 - acc: 0.8852 - val_loss: 0.2354 - val_acc: 0.9119\n",
            "Epoch 17/50\n",
            "4/4 [==============================] - ETA: 0s - loss: 0.2931 - acc: 0.8810\n",
            "Epoch 17: val_acc improved from 0.91190 to 0.91301, saving model to model_cnn.hdf5\n",
            "4/4 [==============================] - 3s 828ms/step - loss: 0.2931 - acc: 0.8810 - val_loss: 0.2193 - val_acc: 0.9130\n",
            "Epoch 18/50\n",
            "4/4 [==============================] - ETA: 0s - loss: 0.2761 - acc: 0.8951\n",
            "Epoch 18: val_acc improved from 0.91301 to 0.91561, saving model to model_cnn.hdf5\n",
            "4/4 [==============================] - 3s 829ms/step - loss: 0.2761 - acc: 0.8951 - val_loss: 0.2251 - val_acc: 0.9156\n",
            "Epoch 19/50\n",
            "4/4 [==============================] - ETA: 0s - loss: 0.2684 - acc: 0.9013\n",
            "Epoch 19: val_acc improved from 0.91561 to 0.92007, saving model to model_cnn.hdf5\n",
            "4/4 [==============================] - 3s 839ms/step - loss: 0.2684 - acc: 0.9013 - val_loss: 0.2030 - val_acc: 0.9201\n",
            "Epoch 20/50\n",
            "4/4 [==============================] - ETA: 0s - loss: 0.2609 - acc: 0.8981\n",
            "Epoch 20: val_acc improved from 0.92007 to 0.92119, saving model to model_cnn.hdf5\n",
            "4/4 [==============================] - 3s 845ms/step - loss: 0.2609 - acc: 0.8981 - val_loss: 0.2107 - val_acc: 0.9212\n",
            "Epoch 21/50\n",
            "4/4 [==============================] - ETA: 0s - loss: 0.2657 - acc: 0.9038\n",
            "Epoch 21: val_acc improved from 0.92119 to 0.93011, saving model to model_cnn.hdf5\n",
            "4/4 [==============================] - 3s 833ms/step - loss: 0.2657 - acc: 0.9038 - val_loss: 0.1880 - val_acc: 0.9301\n",
            "Epoch 22/50\n",
            "4/4 [==============================] - ETA: 0s - loss: 0.2419 - acc: 0.9097\n",
            "Epoch 22: val_acc did not improve from 0.93011\n",
            "4/4 [==============================] - 3s 821ms/step - loss: 0.2419 - acc: 0.9097 - val_loss: 0.1933 - val_acc: 0.9286\n",
            "Epoch 23/50\n",
            "4/4 [==============================] - ETA: 0s - loss: 0.2321 - acc: 0.9174\n",
            "Epoch 23: val_acc improved from 0.93011 to 0.93717, saving model to model_cnn.hdf5\n",
            "4/4 [==============================] - 3s 838ms/step - loss: 0.2321 - acc: 0.9174 - val_loss: 0.1767 - val_acc: 0.9372\n",
            "Epoch 24/50\n",
            "4/4 [==============================] - ETA: 0s - loss: 0.2286 - acc: 0.9110\n",
            "Epoch 24: val_acc did not improve from 0.93717\n",
            "4/4 [==============================] - 3s 821ms/step - loss: 0.2286 - acc: 0.9110 - val_loss: 0.1759 - val_acc: 0.9368\n",
            "Epoch 25/50\n",
            "4/4 [==============================] - ETA: 0s - loss: 0.2213 - acc: 0.9221\n",
            "Epoch 25: val_acc improved from 0.93717 to 0.93866, saving model to model_cnn.hdf5\n",
            "4/4 [==============================] - 3s 834ms/step - loss: 0.2213 - acc: 0.9221 - val_loss: 0.1686 - val_acc: 0.9387\n",
            "Epoch 26/50\n",
            "4/4 [==============================] - ETA: 0s - loss: 0.2121 - acc: 0.9241\n",
            "Epoch 26: val_acc did not improve from 0.93866\n",
            "4/4 [==============================] - 3s 822ms/step - loss: 0.2121 - acc: 0.9241 - val_loss: 0.1674 - val_acc: 0.9387\n",
            "Epoch 27/50\n",
            "4/4 [==============================] - ETA: 0s - loss: 0.2141 - acc: 0.9174\n",
            "Epoch 27: val_acc improved from 0.93866 to 0.94089, saving model to model_cnn.hdf5\n",
            "4/4 [==============================] - 3s 847ms/step - loss: 0.2141 - acc: 0.9174 - val_loss: 0.1585 - val_acc: 0.9409\n",
            "Epoch 28/50\n",
            "4/4 [==============================] - ETA: 0s - loss: 0.2102 - acc: 0.9194\n",
            "Epoch 28: val_acc improved from 0.94089 to 0.94349, saving model to model_cnn.hdf5\n",
            "4/4 [==============================] - 3s 836ms/step - loss: 0.2102 - acc: 0.9194 - val_loss: 0.1543 - val_acc: 0.9435\n",
            "Epoch 29/50\n",
            "4/4 [==============================] - ETA: 0s - loss: 0.1965 - acc: 0.9273\n",
            "Epoch 29: val_acc did not improve from 0.94349\n",
            "4/4 [==============================] - 3s 824ms/step - loss: 0.1965 - acc: 0.9273 - val_loss: 0.1612 - val_acc: 0.9398\n",
            "Epoch 30/50\n",
            "4/4 [==============================] - ETA: 0s - loss: 0.1947 - acc: 0.9293\n",
            "Epoch 30: val_acc improved from 0.94349 to 0.94572, saving model to model_cnn.hdf5\n",
            "4/4 [==============================] - 3s 835ms/step - loss: 0.1947 - acc: 0.9293 - val_loss: 0.1490 - val_acc: 0.9457\n",
            "Epoch 31/50\n",
            "4/4 [==============================] - ETA: 0s - loss: 0.1923 - acc: 0.9291\n",
            "Epoch 31: val_acc did not improve from 0.94572\n",
            "4/4 [==============================] - 3s 837ms/step - loss: 0.1923 - acc: 0.9291 - val_loss: 0.1514 - val_acc: 0.9420\n",
            "Epoch 32/50\n",
            "4/4 [==============================] - ETA: 0s - loss: 0.1944 - acc: 0.9311\n",
            "Epoch 32: val_acc did not improve from 0.94572\n",
            "4/4 [==============================] - 4s 922ms/step - loss: 0.1944 - acc: 0.9311 - val_loss: 0.1454 - val_acc: 0.9454\n",
            "Epoch 33/50\n",
            "4/4 [==============================] - ETA: 0s - loss: 0.1946 - acc: 0.9276\n",
            "Epoch 33: val_acc did not improve from 0.94572\n",
            "4/4 [==============================] - 3s 851ms/step - loss: 0.1946 - acc: 0.9276 - val_loss: 0.1465 - val_acc: 0.9446\n",
            "Epoch 34/50\n",
            "4/4 [==============================] - ETA: 0s - loss: 0.1852 - acc: 0.9293\n",
            "Epoch 34: val_acc improved from 0.94572 to 0.95019, saving model to model_cnn.hdf5\n",
            "4/4 [==============================] - 3s 854ms/step - loss: 0.1852 - acc: 0.9293 - val_loss: 0.1403 - val_acc: 0.9502\n",
            "Epoch 35/50\n",
            "4/4 [==============================] - ETA: 0s - loss: 0.1752 - acc: 0.9328\n",
            "Epoch 35: val_acc did not improve from 0.95019\n",
            "4/4 [==============================] - 3s 821ms/step - loss: 0.1752 - acc: 0.9328 - val_loss: 0.1550 - val_acc: 0.9398\n",
            "Epoch 36/50\n",
            "4/4 [==============================] - ETA: 0s - loss: 0.1784 - acc: 0.9313\n",
            "Epoch 36: val_acc did not improve from 0.95019\n",
            "4/4 [==============================] - 3s 833ms/step - loss: 0.1784 - acc: 0.9313 - val_loss: 0.1369 - val_acc: 0.9494\n",
            "Epoch 37/50\n",
            "4/4 [==============================] - ETA: 0s - loss: 0.1820 - acc: 0.9311\n",
            "Epoch 37: val_acc did not improve from 0.95019\n",
            "4/4 [==============================] - 3s 840ms/step - loss: 0.1820 - acc: 0.9311 - val_loss: 0.1460 - val_acc: 0.9398\n",
            "Epoch 38/50\n",
            "4/4 [==============================] - ETA: 0s - loss: 0.1782 - acc: 0.9331\n",
            "Epoch 38: val_acc did not improve from 0.95019\n",
            "4/4 [==============================] - 3s 837ms/step - loss: 0.1782 - acc: 0.9331 - val_loss: 0.1358 - val_acc: 0.9480\n",
            "Epoch 39/50\n",
            "4/4 [==============================] - ETA: 0s - loss: 0.1763 - acc: 0.9301\n",
            "Epoch 39: val_acc did not improve from 0.95019\n",
            "4/4 [==============================] - 3s 824ms/step - loss: 0.1763 - acc: 0.9301 - val_loss: 0.1369 - val_acc: 0.9461\n",
            "Epoch 40/50\n",
            "4/4 [==============================] - ETA: 0s - loss: 0.1727 - acc: 0.9311\n",
            "Epoch 40: val_acc did not improve from 0.95019\n",
            "4/4 [==============================] - 3s 824ms/step - loss: 0.1727 - acc: 0.9311 - val_loss: 0.1393 - val_acc: 0.9435\n",
            "Epoch 41/50\n",
            "4/4 [==============================] - ETA: 0s - loss: 0.1673 - acc: 0.9368\n",
            "Epoch 41: val_acc did not improve from 0.95019\n",
            "4/4 [==============================] - 3s 826ms/step - loss: 0.1673 - acc: 0.9368 - val_loss: 0.1346 - val_acc: 0.9461\n",
            "Epoch 42/50\n",
            "4/4 [==============================] - ETA: 0s - loss: 0.1715 - acc: 0.9400\n",
            "Epoch 42: val_acc did not improve from 0.95019\n",
            "4/4 [==============================] - 3s 820ms/step - loss: 0.1715 - acc: 0.9400 - val_loss: 0.1380 - val_acc: 0.9431\n",
            "Epoch 43/50\n",
            "4/4 [==============================] - ETA: 0s - loss: 0.1695 - acc: 0.9353\n",
            "Epoch 43: val_acc improved from 0.95019 to 0.95056, saving model to model_cnn.hdf5\n",
            "4/4 [==============================] - 3s 847ms/step - loss: 0.1695 - acc: 0.9353 - val_loss: 0.1290 - val_acc: 0.9506\n",
            "Epoch 44/50\n",
            "4/4 [==============================] - ETA: 0s - loss: 0.1627 - acc: 0.9340\n",
            "Epoch 44: val_acc did not improve from 0.95056\n",
            "4/4 [==============================] - 3s 824ms/step - loss: 0.1627 - acc: 0.9340 - val_loss: 0.1451 - val_acc: 0.9431\n",
            "Epoch 45/50\n",
            "4/4 [==============================] - ETA: 0s - loss: 0.1676 - acc: 0.9343\n",
            "Epoch 45: val_acc did not improve from 0.95056\n",
            "4/4 [==============================] - 3s 823ms/step - loss: 0.1676 - acc: 0.9343 - val_loss: 0.1299 - val_acc: 0.9476\n",
            "Epoch 46/50\n",
            "4/4 [==============================] - ETA: 0s - loss: 0.1673 - acc: 0.9395\n",
            "Epoch 46: val_acc improved from 0.95056 to 0.95093, saving model to model_cnn.hdf5\n",
            "4/4 [==============================] - 3s 838ms/step - loss: 0.1673 - acc: 0.9395 - val_loss: 0.1280 - val_acc: 0.9509\n",
            "Epoch 47/50\n",
            "4/4 [==============================] - ETA: 0s - loss: 0.1579 - acc: 0.9393\n",
            "Epoch 47: val_acc did not improve from 0.95093\n",
            "4/4 [==============================] - 3s 816ms/step - loss: 0.1579 - acc: 0.9393 - val_loss: 0.1350 - val_acc: 0.9454\n",
            "Epoch 48/50\n",
            "4/4 [==============================] - ETA: 0s - loss: 0.1459 - acc: 0.9425\n",
            "Epoch 48: val_acc did not improve from 0.95093\n",
            "4/4 [==============================] - 3s 825ms/step - loss: 0.1459 - acc: 0.9425 - val_loss: 0.1294 - val_acc: 0.9498\n",
            "Epoch 49/50\n",
            "4/4 [==============================] - ETA: 0s - loss: 0.1576 - acc: 0.9412\n",
            "Epoch 49: val_acc did not improve from 0.95093\n",
            "4/4 [==============================] - 3s 841ms/step - loss: 0.1576 - acc: 0.9412 - val_loss: 0.1324 - val_acc: 0.9461\n",
            "Epoch 50/50\n",
            "4/4 [==============================] - ETA: 0s - loss: 0.1607 - acc: 0.9417\n",
            "Epoch 50: val_acc did not improve from 0.95093\n",
            "4/4 [==============================] - 3s 839ms/step - loss: 0.1607 - acc: 0.9417 - val_loss: 0.1310 - val_acc: 0.9480\n"
          ]
        }
      ],
      "source": [
        "Cnn_1st=model.fit(x_train, y_train,validation_data=(x_test, y_test),epochs=50, batch_size=1200,callbacks=[cp])\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "background_save": true
        },
        "id": "tzPaXEzaCfLB",
        "outputId": "12cc9d7d-ab10-4095-8081-95f62b8f3be3"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[0.05 1.   0.99 ... 0.01 0.01 1.  ]\n",
            "[[0.05452645]\n",
            " [0.99999666]\n",
            " [0.99048847]\n",
            " ...\n",
            " [0.0085918 ]\n",
            " [0.00705546]\n",
            " [0.99965984]]\n",
            "[[1491   94]\n",
            " [  46 1059]]\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.97      0.94      0.96      1585\n",
            "           1       0.92      0.96      0.94      1105\n",
            "\n",
            "    accuracy                           0.95      2690\n",
            "   macro avg       0.94      0.95      0.95      2690\n",
            "weighted avg       0.95      0.95      0.95      2690\n",
            "\n"
          ]
        },
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 576x360 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1200x800 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "import keras\n",
        "from matplotlib import pyplot as plt\n",
        "plt.plot(history.history['accuracy'])\n",
        "plt.plot(history.history['val_accuracy'])\n",
        "plt.title('model accuracy')\n",
        "plt.ylabel('accuracy')\n",
        "plt.xlabel('epoch')\n",
        "plt.legend(['train', 'val'], loc='upper left')\n",
        "plt.show()\n",
        "\n",
        "\n",
        "\n",
        "pd.DataFrame(history.history).plot(figsize=(8,5))\n",
        "plt.show()\n",
        "from sklearn.preprocessing import StandardScaler\n",
        "scaler = StandardScaler()\n",
        "from sklearn.metrics import confusion_matrix, classification_report\n",
        "import seaborn as sns\n",
        "# extract the predicted probabilities\n",
        "p_pred = model.predict(x_test)\n",
        "p_pred = p_pred.flatten()\n",
        "print(p_pred.round(2))\n",
        "# extract the predicted class labels\n",
        "y_pred_CNN = np.where(p_pred > 0.5, 1, 0)\n",
        "# print(y_pred)\n",
        "\n",
        "predicted_ = model.predict(x_test)\n",
        "print(predicted_)\n",
        "\n",
        "print(confusion_matrix(y_test, y_pred_CNN))\n",
        "\n",
        "print(classification_report(y_test, y_pred_CNN))\n",
        "\n",
        "\n",
        "plt.figure(dpi=200)\n",
        "mat = confusion_matrix(y_test, y_pred_CNN)\n",
        "sns.heatmap(mat.T, annot=True, fmt='d', cbar=False)\n",
        "\n",
        "plt.title('Confusion Matrix for Naive Bayes')\n",
        "plt.xlabel('true label')\n",
        "plt.ylabel('predicted label')\n",
        "plt.savefig(\"confusion_matrix.png\")\n",
        "plt.show()\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "background_save": true
        },
        "id": "n2FieHtwzl7I"
      },
      "outputs": [],
      "source": [
        "CNN_acc=accuracy_score(y_test, y_pred_CNN)\n",
        "CNN_precision=precision_score(y_test, y_pred_CNN)\n",
        "CNN_recall=recall_score(y_test, y_pred_CNN)\n",
        "CNN_f1 = f1_score(y_test, y_pred_CNN )\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "O4RCUyO0mVbN"
      },
      "outputs": [],
      "source": [
        "model = Sequential()\n",
        "\n",
        "model.add(Conv1D(filters=256, kernel_size=5, padding='same', activation='relu',\n",
        "                         input_shape=(79, 1)))\n",
        "model.add(MaxPooling1D(pool_size=4))\n",
        "\n",
        "model.add(LSTM(64))\n",
        "\n",
        "model.add(Dense(1, activation='sigmoid'))\n",
        "\n",
        "\n",
        "model.compile(loss='binary_crossentropy',\n",
        "              optimizer='adam',\n",
        "              metrics=['acc'])\n",
        "\n",
        "print(\"Simplified convolutional neural network\")\n",
        "model.summary()\n",
        "\n",
        "model.fit(x_train, y_train, validation_data=(x_test, y_test),epochs=50, batch_size=1200)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "background_save": true
        },
        "id": "zjzqyUMMs7e-"
      },
      "outputs": [],
      "source": [
        "# # Evaluate model on test data.\n",
        "# from sklearn.metrics import f1_score, precision_score, recall_score, accuracy_score\n",
        "# model.evaluate(x_test, y_test, verbose=1, batch_size=1024)\n",
        "# LSTM_CNN_precision = precision_score(x_test, y_test , average=\"weighted\")\n",
        "# LSTM_CNN_recall = recall_score(x_test, y_test , average=\"weighted\")\n",
        "# LSTM_CNN_f1 = f1_score(x_test, y_test , average=\"weighted\")\n",
        "\n",
        "\n",
        "# print(\"Model Accuracy: {:0.2f}%\".format(acc * 100))\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "background_save": true
        },
        "id": "1b-k_vutCojv",
        "outputId": "f9ec96e8-43b1-4373-83b6-cd9c6cc72435"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[0.   0.99 0.94 ... 0.   0.   1.  ]\n",
            "[[1.3828576e-03]\n",
            " [9.9227583e-01]\n",
            " [9.3980646e-01]\n",
            " ...\n",
            " [2.1166205e-03]\n",
            " [9.3939900e-04]\n",
            " [9.9581480e-01]]\n",
            "[[1490   95]\n",
            " [  33 1072]]\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.98      0.94      0.96      1585\n",
            "           1       0.92      0.97      0.94      1105\n",
            "\n",
            "    accuracy                           0.95      2690\n",
            "   macro avg       0.95      0.96      0.95      2690\n",
            "weighted avg       0.95      0.95      0.95      2690\n",
            "\n"
          ]
        },
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 576x360 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1200x800 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "import keras\n",
        "from matplotlib import pyplot as plt\n",
        "plt.plot(history.history['accuracy'])\n",
        "plt.plot(history.history['val_accuracy'])\n",
        "plt.title('model accuracy')\n",
        "plt.ylabel('accuracy')\n",
        "plt.xlabel('epoch')\n",
        "plt.legend(['train', 'val'], loc='upper left')\n",
        "plt.show()\n",
        "\n",
        "\n",
        "\n",
        "pd.DataFrame(history.history).plot(figsize=(8,5))\n",
        "plt.show()\n",
        "from sklearn.preprocessing import StandardScaler\n",
        "scaler = StandardScaler()\n",
        "from sklearn.metrics import confusion_matrix, classification_report\n",
        "import seaborn as sns\n",
        "# extract the predicted probabilities\n",
        "p_pred = model.predict(x_test)\n",
        "p_pred = p_pred.flatten()\n",
        "print(p_pred.round(2))\n",
        "# extract the predicted class labels\n",
        "y_pred_LSTM_CNN = np.where(p_pred > 0.5, 1, 0)\n",
        "# print(y_pred)\n",
        "\n",
        "predicted_ = model.predict(x_test)\n",
        "print(predicted_)\n",
        "\n",
        "print(confusion_matrix(y_test, y_pred_LSTM_CNN))\n",
        "\n",
        "print(classification_report(y_test, y_pred_LSTM_CNN))\n",
        "\n",
        "\n",
        "plt.figure(dpi=200)\n",
        "mat = confusion_matrix(y_test, y_pred_LSTM_CNN)\n",
        "sns.heatmap(mat.T, annot=True, fmt='d', cbar=False)\n",
        "\n",
        "plt.title('Confusion Matrix for Naive Bayes')\n",
        "plt.xlabel('true label')\n",
        "plt.ylabel('predicted label')\n",
        "plt.savefig(\"confusion_matrix.png\")\n",
        "plt.show()\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "background_save": true
        },
        "id": "wchvOxVe0B22"
      },
      "outputs": [],
      "source": [
        "LSTM_CNN_ACC= accuracy_score(y_test, y_pred_LSTM_CNN)\n",
        "LSTM_CNN_precision=precision_score(y_test, y_pred_LSTM_CNN)\n",
        "LSTM_CNN_recall=recall_score(y_test, y_pred_LSTM_CNN)\n",
        "LSTM_CNN_f1 = f1_score(y_test, y_pred_LSTM_CNN )"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "Dl-5q-C1zy2i"
      },
      "outputs": [],
      "source": [
        "#create a dataframe of evaluation metrics\n",
        "df = pd.DataFrame([['Accuracy', LSTM_ACC, LSTM_CNN_ACC, CNN_acc], ['Precision', LSTM_precision, LSTM_CNN_precision, CNN_precision], \n",
        "                   ['Recall', LSTM_recall, LSTM_CNN_recall, CNN_recall],\n",
        "                   ['F1-score', LSTM_f1, LSTM_CNN_f1, CNN_f1]],\n",
        "            \n",
        "\n",
        "\n",
        "                  columns=['Evaluation Metrics', 'LSTM ', 'CNN ', 'LSTM-CNN'])\n",
        "pd.set_option('display.expand_frame_repr', False)\n",
        "#view data\n",
        "print(df)\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "#plot grouped bar chart\n",
        "df.plot(x='Evaluation Metrics',\n",
        "        kind='bar',\n",
        "        stacked=False,\n",
        "        title='Comparison of the classifiers performance', rot=0, grid=True)\n",
        "\n",
        "plt.legend(bbox_to_anchor=(1.0, 1.0))"
      ]
    }
  ],
  "metadata": {
    "colab": {
      "collapsed_sections": [],
      "name": "Phishing Detection System.ipynb",
      "provenance": []
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}
